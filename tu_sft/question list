
    //只整理部分答案，课件上没有
    //太深入的标记later！！
    //稳定交付，
        test1.p16-p35 30min -- 20p/30min -- one page needs 2min at least 
        test2.
    //750+....4 days

    from tao
        fault error failure
        Rx 
            what is Rx? mechanism 
            two types of sensor 
            environment changes ( all the things in a form ) 
        3. antipattern 
            cascading failure and how to fix it 
            chain reaction how to fix it 
        4. bugs as deviant behavior 
            explain must beliefs may beliefs 
            analyse a short of code
        5. tainted data 
            static/dynamic 
            coarse grain tainted 
            precise tainted 
            sting the architecture/signature/ polymorphism 
    from slides 
        ppt-1--introduction and roughly what is fault, classes of fault
            the goal of the course? under what condition? roughly -ext
            what diff from past/before?p7
            what is our approach in general?
            Services need to be? p11
            defect can be ? p13 -ext
            defect density? normally 
            kinds of defects in linux? p18 
            what is INTEGER HANDLING ISSUE,CONTROL FLOW ISSUE? -ext
            availability def p32
            CAUSES OF UNAVAILABILITY [IEEE1995] x5 roughly
            *relationship fault error failure p35
            CHAIN OF DEPENDABILITY THREATS p39 
                between components
            what is failure model? p43 
            what happens when it go beyond failure model?
            FAULT TYPES? x9
            Why is Software Fault Tolerance important?
            what are Dependability threads? relationship between them 
            which func can be used in c/c++ to allocate mem? -p47 r1
            write a mem fault 
        ppt-2--approach1 first step of testing, recommended--Unit test, Ramdom testing(later:Fuzzing, parti....
            the cause of Mars Climate Orbiter crash/xxx in radiation therapy?
            roughly, how is the economic costs of faulty software in the U.S. range?
            abc testing steps, but how to choose?
            the key idea of v life cycle model in systems eng.
            diff. lev of testing?
            Unit testing
                basic terminologies
                    Test case, Test set, SUT, FUT 
                    Black box testing, White box testing
                    post-condition, pre-condition, invariants
                black box testing example roughly, sort? what we are going to implement?
                how does is_permutation() func. been used?
                unit test, for what?
                why we need to emphasize counter examples?
                use assert to perform unit test code? p15 
                what is the RECOMMENDED APPROACH (order ) to testing a SUT? p16 
            TDD
                3 steps of TEST-DRIVEN DEVELOPMENT
                benefits of TDD?  p20 r1  x3
                why new tests should be initially fail? avoid?
                how to clean up code? steps?  x3 
                diff bet.  verification and validation? 
            Random testing 
                some terminologies
                    Failure Rate formula?， SUT, cardinality
                RT FOLLOWS GEOMETRIC DISTRIBUTION ?
                    formula ?
                probability of 
                    no failure detected?
                    at least one failure defected? with t and number of test cases x 
                        that means Cumulative distribution function!the pic? p33
                        can add together to calcu.
                Mean number of test cases until failure found ? p31 
                disadv.? when t is small? what happens
                If algorithm works for smaller integers, what can we do to increase likelihood to detect bugs?
                solution to the disadv. ? skew the test cases? p45 
                what means inadequate? significant parts of program structure are not tested
            STRUCTURAL COVERAGE TESTING
                Control flow coverage criteria? -ans
                    in detail explain  
                draw a CONTROL FLOW GRAPH p50 
                relationship between statement, branch, path, loop coverage? -ans
                WHY NOT ALWAYS 100% STATEMENT COVERAGE? p52 
                Quantifiable? percentage of statements, branches that taken by test 
                loop coverage example, draw a pic p56 
                further coverage criteria
                    condition coverage 
                    dataflow coverage 
                Def-Use CFG?
                All-Defs-Coverage (ADC), All-Uses Coverage (AUC)?
                    https://ece.uwaterloo.ca/~agurfink/ece653/assets/pdf/W04-DataflowCoverage.pdf
        ppt-3--approach2 “Execute" a program on symbolic inputs
            review, how to test a program?(black box testing) x3 steps p4 
            what are 
                symbolic value, symbolic expressions, path constraint, symbolic execution tree 
            how many paths?  
            HOW TO MITIGATE PATH EXPLOSION? x3 paper, p15 
                later 
            ways to extract constrains? SE Engine? roughly
            what is path constraints in logical term?
            the problem is NP-complete?
            how to solve constraints? x2 -ans p21 
            should be based on tested codes? 
            what is the problem here?   
                Unassisted and Automatic Generation of High-Coverage Tests 
            accelerating the process? x2  p22 
                in detail ? p23 
            based on the fact that each branch usually depends on a small number of variables
            problems by symbolic execution p25 p34 
            advantages of symbolic execution? p34 x2 
            tools that w can use to symbolic execution? x3 p27 
            KLEE architecture p28-30 
            distributed se exist 
        ppt-4--approach3 static analysis, checking deviant behavior with addi. checker similar to compiler 
            bugs can be seen as conflicting intentions?
            goal?Find as many (serious) bugs as possible
            why need automation? 
            examples of correctness rules? p5  roughly
            static check based on intent--with an extended compiler
            Lock Checker, free Checker? p10 
            benefits of extending compiler to check source code? p7 
            MUST belief
                for an other call to freeit(), we should allocate an other state machine?
                heuristic to identify free functions? p28 
                problem by doing this heuristik? p29 
                use a fun. to set the state?how? p30
                match any call and any pointer? p32 code? roughly
                the case that SANITIZE(santaiz) INTEGERS BEFORE USE, explain with pic ? p35 
                some example to this ? p39 
                we should not use integers comes from users directly.
                FIND ERRORS WITHOUT KNOWING TRUTH? x2 p50 
                *MUST beliefs and may, what are they? 
                how to use those beliefs? cross-check for contradictions 
                what are must beliefs in this code ? p51 
                ?? p58 may or must? 
                p60 61 later template used to drive must beliefs
                analysis contradictions p66 
                how to do redundancy checking? p75 
                FINDING SECURITY HOLES, how ? p81 
                how to do belief analysis? roughly, general
                when there are multiple implementations ? p86
            MAY belief
                the idea used to handle MAY belief? p89, rank errors?
                why use z-rank to rank 'errors'? some are real error, others are false positives 
                compare to other ranking approach? p91 
                why there may be problems with free() function? p95 
                z-rank example with foo and bar function ? p96
                free error?example p97 
                NULL point error? example? p103 
                    based on what sorting errors? 
                an other example, use in subfunction! worst bug case? short explain p108
                check “A() MAY BE FOLLOWED BY B()” Rule? p110 algo 
            the key idea of 'code beliefs'? without knowing the truth 
            p113 summ. later 
        ppt-5--approach4 'totally random'
            positive testing vs negative testing 
            what is fuzzing? belongs to nega?
            compared to Random testing 
            problem with random testing 
            what is testing depth 
            anatomy of a testing system p9 
            FUZZER’S DATA PRODUCTION method? p11 x2 + p12-14 x3x2 + Evolutionary   
            CLASSIFICATION OF SOPHISTICATION FOR FUZZER’S DATA PRODUCTION p15 
                rank them 
            from the data Generator to SUT? how to transafer data? x4 p17 
            Fuzzing workflow p21 
            why monitoring? detect what? 
            how to deal with Long testing time when using fuzzing? p22 
            what is tls, in which area?
            implementations for tls protocol? p28
                later 
            why always have to update?(win os)
            how to attack roughly? p26
            how to attack the Transport Layer Security (TLS) cryptographic protocols
                goal? read the whole conversation without auth.
                Cryptographic attacks roughly
                State machine attacks
                    Man in the middle can read the whole conversation
                Overflow and Overread attacks 
            main idea of  BLEICHENBACHER’S ATTACK? p31 
            TLS-Attacker?
                an open source framework for evaluating the security of TLS libraries 
                https://github.com/RUB-NDS/TLS-Attacker
                    later 
            TLS attacker can reveal several vulnerabilities ? which p34 
            in detail, how to do fuzzing with TLS-attacker? p32 
            2 stage fuzzing? p33 
            the paper Systematic Fuzzing and Testing of TLS Libraries
                later 
            fuzzing can be used for IPSec over SSH? -future work 
        ppt-6--approach5 'taint analysis' dealing with attacts 
            taint analysis for sql and php injection prevent(static )
                basic idea of taint analysis p5 
                simple way to prevent sql injection p4 
                course vs precise way of tainting 
                how to do precise checking in detail? p8 
                prevent sql injection p9 x1 
                what means php injection? p10 
                    -- input strings as php code or manipulate system state 
                how to enforce that? -
                vulnerabilities--漏洞！
                detecting vulnerabilities 
            taint analysis for other usage 
                Sting: An Automatic Defense System, how does it work? the architecture?  p14
                what is exploit detection 
                how should it be?
                    should provide detailed info 
                    should detect most typies of EXPLOITS
            for overwrite vulnerability
                common overwrite vulnerability? x3 p17 
                    bufferxxx 
                overwrite targets? x2 
                dynamic taint analysis, the idea? the approach?x2 p18 
                what means 'a sensitive way' when using a data ?
                IMPLEMENTATION? Valgrind
                what are typical untrusted sources?x3 p22 
                what are typical ways of propagate a taint? what are we tracking? p23 x2 
                how to detect a misused taint data? (similar to detect exploit? later ) p24 x3
                    ans this :: Common overwrite vulnerabilities
                overwrite method vs overwrite target?
                    eg ATPhttpd cfingerd... vulnerable program
                we can detect many attacks with help of taint analysis!
                we can do taint analysis without their source code 
                can be false positives? no . why? what method can we use  p27 
                how to improve the performance when using taint analysis? p28
                https://github.com/DynamoRIO/dynamorio
                    later 
            for defense system
                Antibodies should be vulnerability-specific?
                VSEF? roughly p32 
                why more effective? only monitoring part of executions p33 
                TAINT-BASED VSEF FILTER GENERATION
                    later 
                can heve FALSE POSITIVE and false negatives ? how ? p39 
                EVALUATION
                    on linux/win -- later 
                what means Accurate? p44 
                PROPERTIES of taint-based VSEF (when compared to Valgrind) x4 p44 
            other usages?
            TaintCheck: TaintSeed, TaintTrack, TaintAssert? p46 
            Advantages of static vs. dynamic taint analysis
            Coarse vs. precise tainting
            Sting: How to efficiently detect and prevent the spreading of   worms
            VSEF Vulnerability Specific Execution Filtering:
                Filter based on execution trace rather than on input
            papers 
                later 
        ppt-7--highlevbugs-MECHANISMS1
            why there are bugs still?
            the def of robust
            sys. architecture p7 
            diff. bet. robustness and software fault tolerance p10 
            what is the reason of resource depletion? 
            resource failures is kind of robustness issue? 
            how to measure robustness? p14 
            types of bugs? x3 their examples?x4  p18
            what kind of bugs are difficult to recognize? roughly
            what may behind random effect? 
            for non-reproducible fault, what approach can we use?  p20 
            compare HEISENBUGS and BOHRBUGS?
            the idea of process pair with pic p22 -ans 
            in production env.? how 
            what is supervisord script used for? 
            supervisord architecture-- similar to program state graph 
            still, we have problems even Thorough we use supervisord script to help us restart 
                how to solve this problem? x2 or their combination  p31 + p35 
            service states -- 
            what to query when watching supervisord? x2 p33 
            in gracefully degradation, we can return partial or wrong result? 
                what we should do to prevent that? 
            normally, when does we finish retry? x3  given a programm, fails and retry 
            selective retry, the idea? 
            HIERARCHICAL retry, what is that?
            tipps for HIERARCHICAL retry:x2 p45 -- trival 
            use selective retry to increase the probability of success 
            Bohrbug--continus crashing 
                we can solve it with gracefully DEGREDATION
                store session state 
            how can we know the number that a client have already retried? p60 
            given 2 processes, how can we detect one has been Crashed?/link processes?
                use pipe, how ?
            what is termination atomicity? 
                p74
            example in practice: farmer/ worker model p59 explain in detail
            what is Rejuvenation? p83 
            it can be Proactive or Reactive? 
            PROACTIVE REJUVENATION VARIANTS? 
                what is periodicxxx, detail 
                what is Load-basedxxx, detail
                and prediction based 
            only rejuvenate if all services that are needed for recovery are available 
        ppt-8--highlevbugs-MECHANISMS2
            what is Checkpointing? 
            what problem can arise when using waitpid() func.? p14 
            the problem of lost updates 
                why? with a pic. hhh
                approach? p21 
            Rejuvenation vs Checkpointing ?
            ways to balence from storing all states to saving no states? x2 
            we are talking about online applications / similar to states 
                in vms, dockers 
            what is ecc mem? 
            how to Memory scrubbing? p33
            how to purge state errors? (similar to dependency errors in system)
            given a piece of code, what is N mean p34 ? what means ft>=0? 
                why exit?
            APPLICATION STATE CORRECTION? check the invariants
            whta is the diff. bet. processes and threads? p42 
            what can we use when facing resource leak? 
            MECHANISMS USED BY APACHE? hh 
            what is recovery block?　idea? p54 
                example p55 
            what happends if no alternatives here? 
            what costs does it have? recovery block p59 roughly
            what can we use if we have a long restart time 
            explain the application architecture p70 
            what is reboot tree 
            what is mttf/mttr p78 
            how can make it more robust? by making use of two components, 
                watching each other rebooting each other 
            why good? the one with bad MTTF has smaller MTTR 
            SUBTREE DEPTH AUGMENTATION, what is that pic p93 
            why reboot components together? prevent to reboot the whole sys. 
            diff. tree structures exist, to minimize the need of reboot 
            tight coupling vs loose coupling? p117 
                give examples x1x2 
            methods- retry for Idempotent function? or non-xx  x3 p118 
            All resources have a lease time？
            Rejuvenation of component might leak resources？ how to deal with? 
                resources will be reclaimed
            structure of reboot can improve reboot time
            MICROSERVICES has a better scalbility/data recovery ? 
        ppt-9--highlevbugs-antipattern
            network is homogenous? 
            topology does not change? 
            infinite bandwidth? 
            what is antipattern p7 
            is post mortem analyse a good pattern? 
            what are typical integration points? p9 x3 
                and what is that 
            problems may happen with integration points? p15 
            AWS has 100s of services, how can they be connected with each other? 
            an example to Microservices? cloud computing ? 
            AWS architecture hh 
                -later 
            antipattern1--cascading failures
                to overcome it, we have to prevent propagation of failures bet. layers
                patterns that we can use for this properse? p23 
                CIRCUIT BREAKER STATE TRANSITIONS hhh 
                how does time out method work? why we use it p23 
                    examples about that p32 
                problem by proxy method? p33 
                summ. what we do for this anti pattern? 
            antipattern2--chain reaction
                even though our servers are decoupled, may be problems
                what is that problem? p35 p37 
                patterns for that? x4 
                    detail for them -large
            antipattern3--blocked threads 
                threads are waiting for sth. or accu. they will all be blocked and 
                    can not prograss 
                why hard to test them? 
                solution? x4 
                    detail to each -large 
            DDoS attack
                what is „Slashdot“ effect
                good marketing can kill your system
                solution/ approach x4 -large  p52 
            when to Rejuvenate? a pattern? p55 
                how to implemente that? p57 
                more efficient hand-over? p57 
            Tools for automatic restart? hh p59 
            p60 later 
            what is respawn limit xy? when used to restart a service or the system. p60 
            patterns for architecture?
                Netflix? 
                amazon? 
            why auto scaling? p64 what police can we use? 
                metrics? x4 cpu utilization.....
                when some metrics satisfy a given condition, we perform an adjustment
                not easy to speak a good policy 
                scale up/ down? 
                but, cpu not allways the bottleneck... hard to say which is 
            what is ELASTIC LOAD BALANCER?
                the architecture? p75 
                load balencer with scaling group
                it also ...
            what means availability zones? 
                grouped into regions
                each region is completely independent 
                similar to bulkhead approach
                and autoscaling group in availability zone
                the architecture? p79 
                fail-over to an other rigion 
            further, can use DNS based load balencing and fail-over 
            what is chaos monkey,the idea  p86 87 ext  x3 
        ppt-10--highlevbugs-Microservices and chaosmonkey
            start from compartion 
            the modern way of building dependable services? 
            most Challenges? x2 roughly
            how doyou think about MONOLITHIC software  p4
            kinds of MONOLITHIC soft? x3 p5 
            with git tool, we can use branch for ? x3 p8 
            Disadvantage even though git management has been used? \
            modern source control system
            feature branch? how to merge into dev. 
            rebase?? later 
            the example of python lib. p14 
            the architecture of monolithic dev. process p16 
            advantages and disadv of monolithic deployment p18 19 
            def. of microservices p23 
            can use diff. versions in diff. services (parts)
            illu. the scalbility of those two approaches: monolithic+microservices
                p29 
            the scalbility of microservices: easy to introduce new versions 
            the runtime structure of monolithic and non-monolithic services p34 
            loose coupling? how x2 p39 
            what is a fail-fast design p45
            local restart process, when dealing with error can not solve  p45 
            what is transparent restart? p46 
            we have to avoid all services reboot at the same time! 
            remote restart? how p47 
            load balencer may also be restarted 
            dealing with ip problem? use url 
            how to perform fault injection during testing and production? 
            monolithic aspects? 
            apply fault tolerant to microservices? start from p44 
        chaosmonkey
            the idea -- check if our solution works
            what is a complex system? p5    
            why bugs everywhere? -- too complex too little time 
            what is Chaos Engineering p7 
                ways to do that x2 p9 
            what is the Problem with testing env.? 
            the solution for that? p11 
            it is about increasing the confidence of the sys. 
            how to measure that our sys. works properly? 
                -- use monitoring infrastra.
                measure? p13 roughly x3 
            what to inject? p14 
            pass fault injections does not means sys. will work properly in 
                production sys. 
            perform injections during staff is in office... 
            what means MINIMIZE BLAST RADIUS p19 
            diff. kinds of monkeys p21-23
                also, some good monkeys 
            steps/ways to test x3  p25 
        ppt-11--highlevbugs-RX
            the poisonous request , what is that 
            the problem when we using the same configuration for each instance? p7 
            idea of rx 
                in real life means ? 
                in se dev means? 
                p9 
                p67 
            diff. checkpointing Strategies? p10 x2 
            in RX, what do we do when bug is detected ? p12 
                in picture is ok p13
            re: kinds of bugs ? 
            advantages of rx p15 
            what are execution env. ? x3 p16 
            what are the properties of a re-env. change? p16 x2 
            bugs in mem. management, how can it be solved (applying) p18 
            heap and stack, give some examples p19 
            what is RETURN-ORIENTED PROGRAMMING (ROP) ? p28 
            possible solution to bufferoverflow x2x1 p29 p30
            statck buffer overflow attack explain ? 
            heap buffer overflow ? what is that ? what is the problem? overwrite what 
            one can overwrite any mem. location? 
            inject attack code ... code later 
            environmental crashes, what is that 
            security problems hard to detect 
            rx architecture? p50 
            two types of sensors p51 
            why not integrated the second type? 
            what are SENSORS? p51 
            lightweight checkpointing method? paper[2] later 
            what is mem. wrapper supports what? x4 hhh 
            what is message wrapper
            process scheduling.... why we use them? p54 
            env warpers? x5 
            proxy can also help this process 
            the functionality of control unit in rx architecture 
            env. changes and the types of bugs * explain the table 
            bug types can be solved by RX ? p59 
            recovery performance? what is that 
            minor performance impact of RX 
            how to Improve the performance of RX? 
                the order of env. changes does metter x3 we have to optimize it p65 
            Challenges of RX x2 
            it is about surviving software faults....
            provides more feedbacks for bug analysis (diagnoses)
            typical imp. , with diff. env. settings 